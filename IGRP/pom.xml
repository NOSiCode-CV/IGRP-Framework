<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   
   <modelVersion>4.0.0</modelVersion>
   
   <groupId>IGRP</groupId>
   <artifactId>IGRP</artifactId> 
   <version>v2</version>
   <packaging>war</packaging>
   <name>IGRP-Framework</name>
   <description>IGRP Framework is a powerful and highly customizable platform developed by the Operational Nucleus for the Information Society (NOSi) to create web applications, it provides out of box, several modules to make easy to create stand-alone, production-grade web applications: authentication and access-control, business processes automation, reporting, page builder with automatic code generation and incorporation of the Once-Only-Principle, written in Java. IGRP Framework WAR - Contains some keys resources that give UI to IGRP Framework and others supports files.
	</description>
	<url>https://github.com/NOSiCode-CV/IGRP-Framework</url>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>IGRP</name>
			<email>igrpweb@nosi.cv</email>
			<organization>NOSI EPE</organization>
			<organizationUrl>https://nosi.cv</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/NOSiCode-CV/IGRP-Framework.git</connection>
		<developerConnection>scm:git:ssh://github.com/NOSiCode-CV/IGRP-Framework.git</developerConnection>
		<url>http://github.com/NOSiCode-CV/IGRP-Framework/tree/igrp-horizon-dev</url>
	</scm>
   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
      
     <maven.compiler.release>17</maven.compiler.release>

		

		<!-- TomEE Embedded Maven Plugin -->
      <tomee.version>10.0.1</tomee.version>
      <tomee.maven.plugin.version>10.0.1</tomee.maven.plugin.version>

      <tomee.classifier>plus</tomee.classifier>

       <javadoc.plugin.version>3.0.1</javadoc.plugin.version>
      <hibernate.jpa_2_1_api.version>1.0.2.Final</hibernate.jpa_2_1_api.version>
      <hibernate.version>5.6.15.Final</hibernate.version>
      <hikaricp.version>5.1.0</hikaricp.version>
		<!--      jbdc drivers-->
      <mysql.version>9.2.0</mysql.version>
      <h2.version>2.3.232</h2.version>
      <sqlserver.version>12.4.2.jre11</sqlserver.version>
      <oracle.version>23.2.0.0</oracle.version> <!-- TESTING more than 23.3.0.23.09 with problem starting because hibernate 5.X -->

      <model.mapper.version>3.2.2</model.mapper.version>
     
       <jersey.version>2.43</jersey.version>
		<!-- Apache properties -->
      <apache.libintl.version>0.18.3</apache.libintl.version>
      <apache.commons.beanutils.version>1.11.0</apache.commons.beanutils.version>
      <apache.commons.lang3.version>3.17.0</apache.commons.lang3.version>
      <apache.commons.text.version>1.13.1</apache.commons.text.version>
      <apache.commons.io.version>2.19.0</apache.commons.io.version>
      <apache.logging.log4j.version>2.24.3</apache.logging.log4j.version>

       <slf4j.version>2.0.17</slf4j.version>
   
      <reflections.version>0.10.2</reflections.version>
      <jdt.version>3.41.0</jdt.version>
		<!-- Servlet API -->
      <servlet.api.version>3.1.0</servlet.api.version>
		<!-- OPEN HTML TO PDF -->
      <openhtml.version>1.0.10</openhtml.version>
      <jsoup.version>1.20.1</jsoup.version>
      <gson.version>2.13.1</gson.version>
		<!-- For XSLT and XPATH handling ... -->
      <xalan.version>2.7.3</xalan.version>
		<!-- Maven compiler plugin -->
      <maven.compiler.plugin.version>3.14.0</maven.compiler.plugin.version>
      <maven.war.plugin.version>3.4.0</maven.war.plugin.version>
      <maven.surefire.plugin.version>3.5.3</maven.surefire.plugin.version>
		<!-- Unit Test and Integration Test Properties -->
      <junit.jupiter.version>5.9.2</junit.jupiter.version>

		<!-- JavaDev Underscore Version: Transform JSON To XML Preserving the
		order of the elements - needed to invite users LDAP-->
      <javadev.underscore.version>1.112</javadev.underscore.version>

		<!-- Activiti BPMN -->
       <activiti.bpmn.converter.version>7.1.0.M6</activiti.bpmn.converter.version>

		<!-- Flyway Migration API & Docker PostgreSQL -->

		<!--suppress UnresolvedMavenProperty -->
       <igrp.db.user>${db_user}</igrp.db.user> <!-- Ex: postgres -->
		<!--suppress UnresolvedMavenProperty -->
       <igrp.db.password>${db_password}</igrp.db.password>
		<!--suppress UnresolvedMavenProperty -->
       <igrp.db.dsn>jdbc:postgresql://${server_IP}/${db_name}</igrp.db.dsn> <!-- Ex: jdbc:postgresql://localhost:5432/db_igrp  -->
		<!--<igrp.db.dsn>jdbc:postgresql://postgres:5432/db_igrp</igrp.db.dsn>--> <!-- Uncomment this line when run IGRPWEB+Postgres+Docker -->
		<!--suppress UnresolvedMavenProperty -->
       <igrp.migration.location>${migration_location}</igrp.migration.location> <!-- Ex: classpath:nosi/core/db/migration/igrp/postgres  -->


		<!-- Barcode ...-->
      <google.zxing.version>3.5.3</google.zxing.version>
		<!--  <apache.httpcomponents.httpmime.version>4.5.14</apache.httpcomponents.httpmime.version>
      <apache.httpcomponents.httpcore.version>4.4.16</apache.httpcomponents.httpcore.version>-->
		<!-- K8s & Docker
      <jkube.version>1.7.0</jkube.version>
      <docker.registry>localhost:5000</docker.registry>
       -->
   </properties>
  
   <dependencies>
		<!-- https://mvnrepository.com/artifact/com.google.guava/guava
      <dependency>
         <groupId>com.google.guava</groupId>
         <artifactId>guava</artifactId>
         <version>31.1-jre</version>
      </dependency> -->
		<!-- Microsoft Office docs. -->
		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml 
      <dependency>
         <groupId>org.apache.poi</groupId>
         <artifactId>poi-ooxml</artifactId>
         <version>5.2.3</version>
      </dependency>-->

		<!-- https://mvnrepository.com/artifact/javax.validation/validation-api
				Dependencie for hibernate 5.X.X do not delete yet. 2.0.1.Final Is the last version
		-->
		<dependency>
		    <groupId>javax.validation</groupId>
		    <artifactId>validation-api</artifactId>
		    <version>2.0.1.Final</version>
		</dependency>



       <!-- TO BE REPLACED https://mvnrepository.com/artifact/org.dom4j/dom4j -->
      <dependency>
         <groupId>org.dom4j</groupId>
         <artifactId>dom4j</artifactId>
         <version>[2.1.4,3.0.0)</version>
      </dependency>

		<!-- OPEN HTML TO PDF https://github.com/danfickle/openhtmltopdf -->
      <dependency>
			<!-- ALWAYS required, usually included transitively. -->
         <groupId>com.openhtmltopdf</groupId>
         <artifactId>openhtmltopdf-core</artifactId>
         <version>${openhtml.version}</version>
      </dependency>
		<!-- Required for PDF output. 
      <dependency>
         <groupId>com.openhtmltopdf</groupId>
         <artifactId>openhtmltopdf-pdfbox</artifactId>
         <version>${openhtml.version}</version>
      </dependency>-->
		<!-- Objects support plugin. -->
      <dependency>
         <groupId>com.openhtmltopdf</groupId>
         <artifactId>openhtmltopdf-objects</artifactId>
         <version>${openhtml.version}</version>
      </dependency>
		<!-- Barcode... -->
      <dependency>
         <groupId>com.google.zxing</groupId>
         <artifactId>javase</artifactId>
         <version>${google.zxing.version}</version>
      </dependency>
		<!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
      <dependency>
         <groupId>org.jsoup</groupId>
         <artifactId>jsoup</artifactId>
         <version>${jsoup.version}</version>
      </dependency>
		<!-- /END OPEN HTML TO PDF https://github.com/danfickle/openhtmltopdf -->
		<!-- For XSLT and XPATH handling -->
		<!-- https://mvnrepository.com/artifact/xalan/xalan -->
      <dependency>
         <groupId>xalan</groupId>
         <artifactId>xalan</artifactId>
         <version>${xalan.version}</version>
      </dependency> 
		<!-- https://mvnrepository.com/artifact/xalan/serializer -->
      <dependency>
         <groupId>xalan</groupId>
         <artifactId>serializer</artifactId>
         <version>${xalan.version}</version>
         <exclusions>
            <exclusion>
               <groupId>xml-apis</groupId>
               <artifactId>xml-apis</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

		<!-- Hibernate Dependencies -->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-core</artifactId>
         <version>${hibernate.version}</version>
      </dependency>
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-hikaricp</artifactId>
         <version>${hibernate.version}</version>
      </dependency>
		<!--END
        Hibernate Dependencies -->
		<!-- Database Dependencies -->
		<!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>${mysql.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
      <dependency>
         <groupId>org.postgresql</groupId>
         <artifactId>postgresql</artifactId>
         <version>[42.7.2,43.0.0)</version>
      </dependency>
		<!--
		https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc -->
      <dependency>
         <groupId>com.microsoft.sqlserver</groupId>
         <artifactId>mssql-jdbc</artifactId>
         <version>${sqlserver.version}</version>
         <scope>runtime</scope>
      </dependency>
		<!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
      <dependency>
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <version>${h2.version}</version>
         <scope>runtime</scope>
      </dependency>
		<!-- https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc11 -->
		<dependency>
		    <groupId>com.oracle.database.jdbc</groupId>
		    <artifactId>ojdbc11</artifactId>
		    <version>${oracle.version}</version>
		    <scope>runtime</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.oracle.database.jdbc/ucp -->
		<dependency>
		    <groupId>com.oracle.database.jdbc</groupId>
		    <artifactId>ucp11</artifactId>
		    <version>${oracle.version}</version>
		    <scope>runtime</scope>
	  	</dependency>
		<!-- END Database Dependencies -->

		<!-- Jersey Dependencies
      <dependency>
         <groupId>org.glassfish.jersey.core</groupId>
         <artifactId>jersey-client</artifactId>
         <version>${jersey.version}</version>
      </dependency>-->
		<!--
		https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-server
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
		<artifactId>jersey-server</artifactId>
		<version>${jersey.version}</version>
		</dependency> -->
		<!--
		https://mvnrepository.com/artifact/org.glassfish.jersey.inject/jersey-hk2
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
		<artifactId>jersey-hk2</artifactId>
			<version>${jersey.version}</version>
		</dependency>-->
		<!--
		https://mvnrepository.com/artifact/org.glassfish.jersey.containers/jersey-container-servlet
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
		<artifactId>jersey-container-servlet</artifactId>
		<version>${jersey.version}</version>
		</dependency>-->
		<!--
		https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-json-jackson
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
		<artifactId>jersey-media-json-jackson</artifactId>
		<version>${jersey.version}</version>
		</dependency>-->
		<!--	https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-multipart
      <dependency>
         <groupId>org.glassfish.jersey.media</groupId>
         <artifactId>jersey-media-multipart</artifactId>
         <version>${jersey.version}</version>
      </dependency>-->
		<!-- End Jersey Dependencies -->
		<!-- Mapp Class -->
      <dependency>
         <groupId>org.modelmapper</groupId>
         <artifactId>modelmapper</artifactId>
         <version>${model.mapper.version}</version>
      </dependency>
		<!--END
        Mapp Class -->
		<!-- JSON Dependencies -->
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
      <dependency>
         <groupId>com.google.code.gson</groupId>
         <artifactId>gson</artifactId>
         <version>${gson.version}</version>
      </dependency>
		<!-- https://mvnrepository.com/artifact/org.json/json -->
      <dependency>
         <groupId>org.json</groupId>
         <artifactId>json</artifactId>
         <version>[20231013,]</version>
      </dependency>
		<!-- END JSON Dependencies -->
		<!-- For accessing GNU Gettext Java bundles -->
		<!-- https://mvnrepository.com/artifact/org.gnu.gettext/libintl -->
      <dependency>
         <groupId>org.gnu.gettext</groupId>
         <artifactId>libintl</artifactId>
         <version>${apache.libintl.version}</version>
      </dependency>
		<!-- Apache dependencies -->
		<!--
		https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
      <dependency>
         <groupId>commons-beanutils</groupId>
         <artifactId>commons-beanutils</artifactId>
         <version>${apache.commons.beanutils.version}</version>
      </dependency>
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-lang3</artifactId>
         <version>${apache.commons.lang3.version}</version>
      </dependency>
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-text</artifactId>
         <version>${apache.commons.text.version}</version>
      </dependency>
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
      <dependency>
         <groupId>commons-io</groupId>
         <artifactId>commons-io</artifactId>
         <version>${apache.commons.io.version}</version>
      </dependency>
		<!-- Log4j framework -->
		<!--
		https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-core</artifactId>
         <version>${apache.logging.log4j.version}</version>
      </dependency>
		<!--
      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-bom</artifactId>
         <version>${apache.logging.log4j.version}</version>
         <scope>provided</scope>
         <type>pom</type>
      </dependency> -->
       <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
       <dependency>
           <groupId>org.slf4j</groupId>
           <artifactId>slf4j-simple</artifactId>
           <version>${slf4j.version}</version>
       </dependency>

		<!-- Web, XML, SOAP ... -->
		<!-- https://mvnrepository.com/artifact/org.apache.axis2/axis2 
      <dependency>
         <groupId>org.apache.axis2</groupId>
         <artifactId>axis2</artifactId>
         <version>${apache.axis.version}</version>
         <type>pom</type>
      </dependency>-->
		<!--
		https://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime 
      <dependency>
         <groupId>org.apache.httpcomponents</groupId>
         <artifactId>httpmime</artifactId>
         <version>${apache.httpcomponents.httpmime.version}</version>
      </dependency>-->
		<!--
		https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore 
      <dependency>
         <groupId>org.apache.httpcomponents</groupId>
         <artifactId>httpcore</artifactId>
         <version>${apache.httpcomponents.httpcore.version}</version>
      </dependency>-->
		<!--END
        Apache dependencies -->
		<!-- https://mvnrepository.com/artifact/org.reflections/reflections -->
      <dependency>
         <groupId>org.reflections</groupId>
         <artifactId>reflections</artifactId>
         <version>${reflections.version}</version>
      </dependency>
		<!-- https://mvnrepository.com/artifact/org.eclipse.jdt/ecj -->
      <dependency>
         <groupId>org.eclipse.jdt</groupId>
         <artifactId>ecj</artifactId>
         <version>${jdt.version}</version>
      </dependency>
		<!-- Javadev underscore API for jsonToXml transformation purpose -->
		<!-- https://mvnrepository.com/artifact/com.github.javadev/underscore -->
      <dependency>
         <groupId>com.github.javadev</groupId>
         <artifactId>underscore</artifactId>
         <version>${javadev.underscore.version}</version>
      </dependency>
		<!-- Database Migration API -->
		<!-- https://mvnrepository.com/artifact/org.flywaydb/flyway-core -->
      <dependency>
         <groupId>org.flywaydb</groupId>
         <artifactId>flyway-core</artifactId>
         <version>11.0.1</version>
      </dependency>
      
      <!-- https://mvnrepository.com/artifact/org.flywaydb/flyway-database-postgresql -->
		<dependency>
		    <groupId>org.flywaydb</groupId>
		    <artifactId>flyway-database-postgresql</artifactId>
		    <version>11.0.1</version>
		</dependency>

		<!-- (Start) Unit & Integration Test Dependencies -->
		<!--JUnit
        5 Platform Test Engine & JUnit 5 API -->
		<!--
		https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine 
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-engine</artifactId>
         <version>${junit.jupiter.version}</version>
         <scope>test</scope>
      </dependency>-->
		<!-- JUnit Vintage For Backward Compatibility (JUnit 3 or JUnit 4 tests) -->
		<!--
		https://mvnrepository.com/artifact/org.junit.vintage/junit-vintage-engine
		<dependency>
			<groupId>org.junit.vintage</groupId>
		<artifactId>junit-vintage-engine</artifactId>
		<version>${junit.vintage.version}</version>
			<scope>test</scope>
		</dependency> 
      <dependency>
         <groupId>org.junit.platform</groupId>
         <artifactId>junit-platform-suite</artifactId>
         <version>1.9.2</version>
         <scope>test</scope>
      </dependency>-->
		<!-- (End) Unit & Integration Test Dependencies -->
		<!-- Provided Dependencies -->
		<!-- For jax-rs client dependencies. (Ex: ContentDisposition.class) -->
		<!-- https://mvnrepository.com/artifact/org.apache.cxf/cxf-bundle-jaxrs
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-core</artifactId>
         <version>${cxf.rt.frontend.jaxrs.version}</version>
      </dependency>-->
		<!-- Activiti BPMN -->
		<!--
		https://mvnrepository.com/artifact/org.activiti/activiti-bpmn-converter-->
      <dependency>
         <groupId>org.activiti</groupId>
         <artifactId>activiti-bpmn-converter</artifactId>
         <version>${activiti.bpmn.converter.version}</version>
         <exclusions>
            <exclusion>
               <groupId>com.fasterxml.jackson.core</groupId>
               <artifactId>jackson-core</artifactId>
            </exclusion>
             <exclusion>
                 <groupId>com.fasterxml.jackson.core</groupId>
                 <artifactId>jackson-databind</artifactId>
             </exclusion>
             <exclusion>
                 <groupId>com.fasterxml.jackson.core</groupId>
                 <artifactId>jackson-annotations</artifactId>
             </exclusion>
         </exclusions>
      </dependency>
		<!-- https://mvnrepository.com/artifact/org.activiti/activiti-bpmn-model
      <dependency>
         <groupId>org.activiti</groupId>
         <artifactId>activiti-bpmn-model</artifactId>
         <version>${activiti.bpmn.model.version}</version>
         <exclusions>
            <exclusion>
               <groupId>com.fasterxml.jackson.core</groupId>
  				<artifactId>jackson-databind</artifactId>
            </exclusion>
            <exclusion>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
            </exclusion>
         </exclusions>
         
      </dependency>-->
       <!-- https://mvnrepository.com/artifact/org.apache.tomee/tomee-jaxrs-->
       <dependency>
           <groupId>org.apache.tomee</groupId>
           <artifactId>tomee-jaxrs</artifactId>
           <version>${tomee.version}</version>
           <scope>provided</scope>
       </dependency>

       <!-- https://mvnrepository.com/artifact/org.apache.tomee/jakartaee-api -->
       <dependency>
           <groupId>org.apache.tomee</groupId>
           <artifactId>jakartaee-api</artifactId>
           <version>10.0</version>
       </dependency>

   </dependencies>
   <build>
      <finalName>${project.artifactId}</finalName>
      <directory>${project.basedir}/target</directory>
      <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
      <testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
      <outputDirectory>${project.build.directory}/classes</outputDirectory>
      <testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>
      <resources>
         <resource>
            <directory>${project.basedir}/src/main/resources</directory>
             <filtering>true</filtering>
         </resource>
      </resources>
      <testResources>
         <testResource>
            <directory>${project.basedir}/src/test/resources</directory>
         </testResource>
      </testResources>
      <pluginManagement>
         <plugins>
<!--    <plugin>-->
<!--      <groupId>org.apache.maven.plugins</groupId>-->
<!--      <artifactId>maven-enforcer-plugin</artifactId>-->
<!--      <version>3.4.1</version>-->
<!--      <executions>-->
<!--        <execution>-->
<!--          <id>enforce-versions</id>-->
<!--          <goals>-->
<!--            <goal>enforce</goal>-->
<!--          </goals>-->
<!--          <configuration>-->
<!--            <rules>-->
<!--              <requireMavenVersion>-->
<!--                <version>3.2.5</version>  specify your required Maven version here -->
<!--              </requireMavenVersion>-->
<!--            </rules>-->
<!--          </configuration>-->
<!--        </execution>-->
<!--      </executions>-->
<!--    </plugin>-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.3.1</version>
					<configuration>
						<propertiesEncoding>UTF-8</propertiesEncoding>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.6.0</version>
				</plugin>
				<!--		https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<includes>
							<include>**/*.java</include>
						</includes>
					</configuration>
				</plugin>
				<!--https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
            <plugin>
               <artifactId>maven-surefire-plugin</artifactId>
               <version>${maven.surefire.plugin.version}</version>
            </plugin>
				<!--		https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-war-plugin -->
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven.war.plugin.version}</version>
					<configuration>
						<webResources>
							<resource>
								<directory>
									${project.basedir}/src/main/java/nosi/core/i18n</directory>
								<targetPath>WEB-INF/classes/nosi/core/i18n</targetPath>
							</resource>
						</webResources>
					</configuration>
				</plugin>
				<!-- Database migrations plugin -->
            <plugin>
               <groupId>org.flywaydb</groupId>
               <artifactId>flyway-maven-plugin</artifactId>

               <configuration>
                  <url>${igrp.db.dsn}</url>
                  <user>${igrp.db.user}</user>
                  <password>${igrp.db.password}</password>
                  <baselineOnMigrate>true</baselineOnMigrate>
                  <locations>
                     <location>${igrp.migration.location}</location>
                  </locations>
               </configuration>
            </plugin>
				<!-- FIM Database migrations plugin -->
				<!-- Embedded TomEE plugin -->
            <plugin>
               <groupId>org.apache.tomee.maven</groupId>
               <artifactId>tomee-maven-plugin</artifactId>
               <version>${tomee.maven.plugin.version}</version>
               <configuration>
                  <tomeeClassifier>plus</tomeeClassifier>
                  <reloadOnUpdate>false</reloadOnUpdate>
              		<!-- To change de ports
              		<debugPort>5007</debugPort>
					<tomeeHttpPort>8081</tomeeHttpPort>
					<tomeeShutdownPort>8006</tomeeShutdownPort>  -->
                  <args>-Dfile.encoding=UTF-8</args>
                   <removeDefaultWebapps>false</removeDefaultWebapps>
                  <synchronization>
                     <extensions>
                        <extension>.class</extension>
								<!-- if you want to	update each time you build with mvn compile -->
                        <extension>.xml</extension>
                        <extension>.xsl</extension>
                        <extension>.css</extension>
                        <extension>.js</extension>
                         <extension>.json</extension>
                         <extension>.html</extension>
<!--                        <extension>.properties</extension>-->
                     </extensions>
                  </synchronization>
                  <systemVariables>
                     <tomee.serialization.class.whitelist />
                     <tomee.serialization.class.blacklist>-</tomee.serialization.class.blacklist>
                     <openejb.system.apps>true</openejb.system.apps>
                     <openejb.jmx.active>false</openejb.jmx.active>
                     <tomee.remote.support>false</tomee.remote.support>
                  </systemVariables>
                  	<libs>
							<lib>remove:myfaces</lib>	
							<lib>remove:openjpa-</lib>	
<!--							<lib>remove:openwebbeans-</lib>-->
<!--							<lib>remove:microprofile-</lib>		-->
<!--							<lib>remove:smallrye-</lib>					-->
						</libs>
               </configuration>
            </plugin>

				<!-- Docker -->
				<!--				<plugin>-->
				<!--			        <groupId>io.fabric8</groupId>-->
				<!--			        <artifactId>docker-maven-plugin</artifactId>-->
				<!--			        <configuration>-->

				<!--			          <images>-->

				<!--			            <image>-->
				<!--			              <name>igrpweb:${project.version}</name>-->
				<!--			              <alias>igrpweb</alias>-->
				<!--			              <build>-->
				<!--			                 filter>@</filter-->
				<!--			                <contextDir>${project.basedir}/src/main/docker</contextDir>-->
				<!--			                <assembly>-->
				<!--			                  <descriptorRef>artifact</descriptorRef> -->
				<!--			                </assembly>-->
				<!--			              </build>-->
				<!--			              <run>-->
				<!--			                <ports>-->
				<!--			                  <port>8080:8080</port>-->
				<!--			                </ports>-->
				<!--			                <volumes>-->
				<!--							  <bind>-->
				<!--							    <volume>igrpweb_data:/local/tomee</volume>-->
				<!--							  </bind>-->
				<!--							</volumes>-->
				<!-- <autoRemove>true</autoRemove> -->
				<!-- 
			                <links> 
					          <link>postgres</link>
					        </links>
					        -->
				<!--			              </run>-->
				<!--			            </image>-->

				<!--
			            <image>
					      <alias>postgres</alias> 
					      <name>postgres:latest</name>
					      <run>
					      	<env>
							    <POSTGRES_USER>${igrp.db.user}</POSTGRES_USER>
							    <POSTGRES_PASSWORD>${igrp.db.password}</POSTGRES_PASSWORD>
							    <POSTGRES_DB>db_igrp</POSTGRES_DB>
							</env>
					      	<ports>
							    <port>5432:5432</port>
							</ports>
					      	<log>
							    <prefix>postgres</prefix>
							    <enabled>true</enabled>
							    <color>yellow</color>
							</log>
					        <wait> 
					          <log>(?s)PostgreSQL init process complete.*database system is ready to accept connections</log>
					          <time>20000</time>
					        </wait>
					      </run>
					    </image>
			            -->
				<!--			          </images>-->

				<!--			        </configuration>-->

				<!--			      </plugin>-->

				<!-- K8s 
			      <plugin>
					    <groupId>org.eclipse.jkube</groupId>
					    <artifactId>kubernetes-maven-plugin</artifactId>
					    <version>${jkube.version}</version>
					    <configuration>
					    	<images>
						    	<image>
					              <name>${docker.registry}/imarcelf/igrpweb:${project.version}</name>
					              <alias>igrpweb</alias>
					              <build>
					                <contextDir>${project.basedir}/src/main/docker</contextDir>
					              </build>
					            </image>
					    	</images>
					    </configuration>
				  </plugin>-->
				
                
			</plugins>
			
		</pluginManagement>
		
	</build>
	
</project>
